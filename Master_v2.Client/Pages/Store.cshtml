@page "/stores/{id}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper uriHelper
@*
	put routes for page on top with @page /{wishedRoute}
*@

<p hidden><span> Id</span> @model.Id</p>
<p ><span> Name</span> @model.Name</p>
<p ><span> Address</span> @model.Address</p>
<p ><span> OwnerId</span> @model.OwnerId</p>

<table class="table">
    <thead>
        <tr>
            <td hidden> Id</td>
            <td> Name</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var entity in articles)
        {
            <tr>
                <td hidden> @entity.Id</td>
                <td><a href="/articles/@entity.Id"> @entity.Name</a></td>
                <td><button onclick="@(e=>Edit(entity.Id))">Edit</button> |<button onclick="@(e=>Delete(entity.Id))">Delete</button></td>
            </tr>
        }
    </tbody>
</table>

@functions{
    [Parameter]
    private string Id {get; set;}

    Master_v2.Shared.Models.Store model = new Master_v2.Shared.Models.Store();
    ICollection<Master_v2.Shared.Models.Article> articles = new List<Master_v2.Shared.Models.Article>();

    protected override async Task OnInitAsync(){
        model=await Http.GetJsonAsync<Master_v2.Shared.Models.Store>("/api/store/"+Id);
        articles = await Http.GetJsonAsync<ICollection<Master_v2.Shared.Models.Article>>("/api/stores/articles/" + Id);
    }

    void Edit(int id)
    {
        uriHelper.NavigateTo("/article/" + id);
    }
    void Delete(int id)
    {
        uriHelper.NavigateTo("/article/delete/" + id);
    }
}
