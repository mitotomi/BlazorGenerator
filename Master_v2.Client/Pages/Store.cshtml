@page "/stores/{id}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper uriHelper
@*
	put routes for page on top with @page /{wishedRoute}
*@

<p hidden><span> Id</span> @model.Id</p>
<p ><span> Name</span> @model.Name</p>
<p ><span> Address</span> @model.Address</p>
<p ><span> OwnerId</span> @model.OwnerId</p>

<h3>StoreArticles</h3>

<table>
	<thead>
		<tr>
			<td> Id</td>
			<td> Name</td>
		</tr>
	</thead>
	<tbody>
	@foreach(var entity in @model.StoreArticle){
		<tr>
			<td > @entity.Id</td>
			<td > @entity.Name</td>
			<td><button onclick="@(e=>nnEdit(entity.Id, "StoreArticle", ))">Edit</button> |<button onclick="@(e=>nnDelete(entity.Id, "StoreArticle", ))">Delete</button></td>
		</tr>
	}
	</tbody>
</table>

@functions{
	[Parameter]
	private string Id {get; set;}

	Master_v2.Shared.Models.Store model = new Master_v2.Shared.Models.Store();
ICollection<Master_v2.Shared.Models.Article> articles = new List<Master_v2.Shared.Models.Article>()
	protected override async Task OnInitAsync(){
		model=await Http.GetJsonAsync<Master_v2.Shared.Models.Store>("/api/store/"+Id);
		articles = await Http.GetJsonAsync<List<Master_v2.Shared.Models.Article>>("/api/store/s/articles/"+Id);
	}
	void Editnn(int id, string table){
		uriHelper.NavigateTo("/"+table.ToLower()+"/"+id+"/"+Id);
	}
	void Deletenn(int id, string table){
		uriHelper.NavigateTo("/" + table.ToLower() + "/delete/"+id+"/"+Id);
	}
	void nnEdit(int id, string table){
		uriHelper.NavigateTo("/"+table.ToLower()+"/"+Id+"/"+id);
	}
	void nnDelete(int id, string table){
		uriHelper.NavigateTo("/" + table.ToLower() + "/delete/"+Id+"/"+id);
	}
}
