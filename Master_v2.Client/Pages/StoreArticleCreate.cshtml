@page "/storearticle/{table}/{id1}/{id2}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper uriHelper
<h1>Edit StoreArticle</h1>

<h6>@message</h6>
<form onsubmit="@Post">
    <input type="number" bind="@model.Id" asp-for="Id" hidden />
    <label>StoreId</label>
    <select bind="@model.StoreId" disabled>
        <option value="">Choose value</option>
        @foreach (var option in optionsstoreid)
        {
            <option value="@option.Key">@option.Value</option>
        }
    </select>
    <label>ArticleId</label>
    <select bind="@model.ArticleId">
        <option value="">Choose value</option>
        @foreach (var option in optionsarticleid)
        {
            <option value="@option.Key">@option.Value</option>
        }
    </select>
    <button type="submit" class="btn btn - success">Add</button>
</form>

<h5>Articles</h5>
<table class="table">
    <thead>
        <tr>
            <td> Id</td>
            <td> Name</td>
            <td> Price</td>
            <td> Actions</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var entity in storearticles)
        {
            <tr>
                <td> @entity.Id</td>
                <td> @entity.Name</td>
                <td> @entity.Price</td>
                <td><button onclick="@(e=>nnDelete(entity.Id))">Delete</button></td>
            </tr>
        }
    </tbody>
</table>

@functions{
    [Parameter]
    private string Id1 { get; set; }
    [Parameter]
    private string Id2 { get; set; }
    [Parameter]
    private string Table { get; set; }

    Master_v2.Shared.Models.StoreArticle model = new Master_v2.Shared.Models.StoreArticle();
    List<Master_v2.Shared.Models.SelectListItem> optionsstoreid = new List<Master_v2.Shared.Models.SelectListItem>();
    List<Master_v2.Shared.Models.SelectListItem> optionsarticleid = new List<Master_v2.Shared.Models.SelectListItem>();
    ICollection<Master_v2.Shared.Models.Article> storearticles = new List<Master_v2.Shared.Models.Article>();
    string message = "";
    protected override async Task OnInitAsync()
    {
        if (!AuthorizationStore.checkWritePermissions("store")) uriHelper.NavigateTo("/");
        model = await Http.GetJsonAsync<Master_v2.Shared.Models.StoreArticle>("/api/storearticle/" + Id1 + "/" + Id2);
        optionsstoreid = await Http.GetJsonAsync<List<Master_v2.Shared.Models.SelectListItem>>("/api/storearticles/storename");
        optionsarticleid = await Http.GetJsonAsync<List<Master_v2.Shared.Models.SelectListItem>>("/api/storearticles/articlename");
        storearticles = await Http.GetJsonAsync<List<Master_v2.Shared.Models.Article>>("/api/storearticle/article/" + Id1);
    }
    public async Task Post()
    {
        try
        {
            if (model.StoreId == 0 || model.ArticleId == 0)
            {
                message = "Please, fill all fields";
            }
            else if (model.Id == 0)
            {
                await Http.SendJsonAsync(HttpMethod.Post, "/api/storearticle/create", model);
                storearticles = await Http.GetJsonAsync<List<Master_v2.Shared.Models.Article>>("/api/storearticle/article/" + Id1);
            }
            else
            {
                await Http.SendJsonAsync(HttpMethod.Post, "/api/storearticle/edit", model);
                storearticles = await Http.GetJsonAsync<List<Master_v2.Shared.Models.Article>>("/api/storearticle/article/" + Id1);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            throw;
        }
    }

    public async Task nnDelete(int id)
    {
        await Http.DeleteAsync("/api/storearticle/delete/" + Id1 + "/" + id);
        storearticles = await Http.GetJsonAsync<List<Master_v2.Shared.Models.Article>>("/api/storearticle/article/" + Id1);
    }

}
